basePath: /v1
consumes:
    - application/json
definitions:
    ErrResponse:
        description: Reference will be omitted if it does not exist.
        title: ErrResponse defines the return messages when an error occurred.
        x-go-package: github.com/marmotedu/component-base/pkg/core
host: iam.api.marmotedu.com
info:
    contact:
        email: colin404@foxmail.com
        name: Lingfei Kong
        url: http://marmotedu.com
    description: Identity and Access Management System.
    license:
        name: MIT
        url: https://opensource.org/licenses/MIT
    title: IAM API Server API.
    version: 1.0.0
paths:
    /policies:
        delete:
            description: Batch delete policies according to input parameters.
            operationId: deletePolicyCollectionRequest
            parameters:
                - in: query
                  items:
                    type: string
                  name: name
                  type: array
                  x-go-name: Names
            responses:
                "200":
                    $ref: '#/responses/okResponse'
                default:
                    $ref: '#/responses/errResponse'
            security:
                - api_key: []
            summary: Batch delete policies.
            tags:
                - policies
        get:
            description: List policies.
            operationId: listPolicyRequest
            parameters:
                - description: |-
                    Kind is a string value representing the REST resource this object represents.
                    Servers may infer this from the endpoint the client submits requests to.
                    Cannot be updated.
                    In CamelCase.
                  in: query
                  name: kind
                  type: string
                  x-go-name: Kind
                - description: |-
                    APIVersion defines the versioned schema of this representation of an object.
                    Servers should convert recognized schemas to the latest internal value, and
                    may reject unrecognized values.
                  in: query
                  name: apiVersion
                  type: string
                  x-go-name: APIVersion
                - description: LabelSelector is used to find matching REST resources.
                  in: query
                  name: labelSelector
                  type: string
                  x-go-name: LabelSelector
                - description: FieldSelector restricts the list of returned objects by their fields. Defaults to everything.
                  in: query
                  name: fieldSelector
                  type: string
                  x-go-name: FieldSelector
                - description: TimeoutSeconds specifies the seconds of ClientIP type session sticky time.
                  format: int64
                  in: query
                  name: timeoutSeconds
                  type: integer
                  x-go-name: TimeoutSeconds
                - description: Offset specify the number of records to skip before starting to return the records.
                  format: int64
                  in: query
                  name: offset
                  type: integer
                  x-go-name: Offset
                - description: Limit specify the number of records to be retrieved.
                  format: int64
                  in: query
                  name: limit
                  type: integer
                  x-go-name: Limit
            responses:
                "200":
                    $ref: '#/responses/listPolicyResponse'
                default:
                    $ref: '#/responses/errResponse'
            summary: List policies.
            tags:
                - policies
        post:
            description: Create policies according to input parameters.
            operationId: createPolicyRequest
            parameters:
                - description: Policy information.
                  in: body
                  name: Body
                  schema: {}
            responses:
                "200":
                    $ref: '#/responses/createPolicyResponse'
                default:
                    $ref: '#/responses/errResponse'
            security:
                - api_key: []
            summary: Create policies.
            tags:
                - policies
    /policies/{name}:
        delete:
            description: Delete policy according to input parameters.
            operationId: deletePolicyRequest
            parameters:
                - description: Policy name.
                  in: path
                  name: name
                  required: true
                  type: string
                  x-go-name: Name
            responses:
                "200":
                    $ref: '#/responses/okResponse'
                default:
                    $ref: '#/responses/errResponse'
            security:
                - api_key: []
            summary: Delete policy.
            tags:
                - policies
        get:
            description: Get details for specified policy according to input parameters.
            operationId: getPolicyRequest
            parameters:
                - description: Policy name.
                  in: path
                  name: name
                  required: true
                  type: string
                  x-go-name: Name
            responses:
                "200":
                    $ref: '#/responses/getPolicyResponse'
                default:
                    $ref: '#/responses/errResponse'
            summary: Get details for specified policy.
            tags:
                - policies
        put:
            description: Update policy according to input parameters.
            operationId: updatePolicyRequest
            parameters:
                - description: Policy information.
                  in: body
                  name: Body
                  schema: {}
                - description: Policy name.
                  in: path
                  name: name
                  required: true
                  type: string
                  x-go-name: Name
            responses:
                "200":
                    $ref: '#/responses/updatePolicyResponse'
                default:
                    $ref: '#/responses/errResponse'
            security:
                - api_key: []
            summary: Update policy.
            tags:
                - policies
    /secrets:
        get:
            description: List secrets.
            operationId: listSecretRequest
            parameters:
                - description: |-
                    Kind is a string value representing the REST resource this object represents.
                    Servers may infer this from the endpoint the client submits requests to.
                    Cannot be updated.
                    In CamelCase.
                  in: query
                  name: kind
                  type: string
                  x-go-name: Kind
                - description: |-
                    APIVersion defines the versioned schema of this representation of an object.
                    Servers should convert recognized schemas to the latest internal value, and
                    may reject unrecognized values.
                  in: query
                  name: apiVersion
                  type: string
                  x-go-name: APIVersion
                - description: LabelSelector is used to find matching REST resources.
                  in: query
                  name: labelSelector
                  type: string
                  x-go-name: LabelSelector
                - description: FieldSelector restricts the list of returned objects by their fields. Defaults to everything.
                  in: query
                  name: fieldSelector
                  type: string
                  x-go-name: FieldSelector
                - description: TimeoutSeconds specifies the seconds of ClientIP type session sticky time.
                  format: int64
                  in: query
                  name: timeoutSeconds
                  type: integer
                  x-go-name: TimeoutSeconds
                - description: Offset specify the number of records to skip before starting to return the records.
                  format: int64
                  in: query
                  name: offset
                  type: integer
                  x-go-name: Offset
                - description: Limit specify the number of records to be retrieved.
                  format: int64
                  in: query
                  name: limit
                  type: integer
                  x-go-name: Limit
            responses:
                "200":
                    $ref: '#/responses/listSecretResponse'
                default:
                    $ref: '#/responses/errResponse'
            summary: List secrets.
            tags:
                - secrets
        post:
            description: Create secrets according to input parameters.
            operationId: createSecretRequest
            parameters:
                - description: Secret information.
                  in: body
                  name: Body
                  schema: {}
            responses:
                "200":
                    $ref: '#/responses/createSecretResponse'
                default:
                    $ref: '#/responses/errResponse'
            security:
                - api_key: []
            summary: Create secrets.
            tags:
                - secrets
    /secrets/{name}:
        delete:
            description: Delete secret according to input parameters.
            operationId: deleteSecretRequest
            parameters:
                - description: Secret name.
                  in: path
                  name: name
                  required: true
                  type: string
                  x-go-name: Name
            responses:
                "200":
                    $ref: '#/responses/okResponse'
                default:
                    $ref: '#/responses/errResponse'
            security:
                - api_key: []
            summary: Delete secret.
            tags:
                - secrets
        get:
            description: Get details for specified secret according to input parameters.
            operationId: getSecretRequest
            parameters:
                - description: Secret name.
                  in: path
                  name: name
                  required: true
                  type: string
                  x-go-name: Name
            responses:
                "200":
                    $ref: '#/responses/getSecretResponse'
                default:
                    $ref: '#/responses/errResponse'
            summary: Get details for specified secret.
            tags:
                - secrets
        put:
            description: Update secret according to input parameters.
            operationId: updateSecretRequest
            parameters:
                - description: Secret information.
                  in: body
                  name: Body
                  schema: {}
                - description: Secret name.
                  in: path
                  name: name
                  required: true
                  type: string
                  x-go-name: Name
            responses:
                "200":
                    $ref: '#/responses/updateSecretResponse'
                default:
                    $ref: '#/responses/errResponse'
            security:
                - api_key: []
            summary: Update secret.
            tags:
                - secrets
    /users:
        delete:
            description: Delete users
            operationId: deleteUserCollectionRequest
            parameters:
                - in: query
                  items:
                    type: string
                  name: name
                  type: array
                  x-go-name: Names
            responses:
                "200":
                    $ref: '#/responses/okResponse'
                default:
                    $ref: '#/responses/errResponse'
            security:
                - api_key: []
            summary: Batch delete user.
            tags:
                - users
        get:
            description: List users.
            operationId: listUserRequest
            parameters:
                - description: |-
                    Kind is a string value representing the REST resource this object represents.
                    Servers may infer this from the endpoint the client submits requests to.
                    Cannot be updated.
                    In CamelCase.
                  in: query
                  name: kind
                  type: string
                  x-go-name: Kind
                - description: |-
                    APIVersion defines the versioned schema of this representation of an object.
                    Servers should convert recognized schemas to the latest internal value, and
                    may reject unrecognized values.
                  in: query
                  name: apiVersion
                  type: string
                  x-go-name: APIVersion
                - description: LabelSelector is used to find matching REST resources.
                  in: query
                  name: labelSelector
                  type: string
                  x-go-name: LabelSelector
                - description: FieldSelector restricts the list of returned objects by their fields. Defaults to everything.
                  in: query
                  name: fieldSelector
                  type: string
                  x-go-name: FieldSelector
                - description: TimeoutSeconds specifies the seconds of ClientIP type session sticky time.
                  format: int64
                  in: query
                  name: timeoutSeconds
                  type: integer
                  x-go-name: TimeoutSeconds
                - description: Offset specify the number of records to skip before starting to return the records.
                  format: int64
                  in: query
                  name: offset
                  type: integer
                  x-go-name: Offset
                - description: Limit specify the number of records to be retrieved.
                  format: int64
                  in: query
                  name: limit
                  type: integer
                  x-go-name: Limit
            responses:
                "200":
                    $ref: '#/responses/listUserResponse'
                default:
                    $ref: '#/responses/errResponse'
            summary: List users.
            tags:
                - users
        post:
            description: Create users according to input parameters.
            operationId: createUserRequest
            parameters:
                - description: User information.
                  in: body
                  name: Body
                  schema: {}
            responses:
                "200":
                    $ref: '#/responses/createUserResponse'
                default:
                    $ref: '#/responses/errResponse'
            security:
                - api_key: []
            summary: Create users.
            tags:
                - users
    /users/{name}:
        delete:
            description: Delete user according to input parameters.
            operationId: deleteUserRequest
            parameters:
                - description: User name.
                  in: path
                  name: name
                  required: true
                  type: string
                  x-go-name: Name
            responses:
                "200":
                    $ref: '#/responses/okResponse'
                default:
                    $ref: '#/responses/errResponse'
            summary: Delete user.
            tags:
                - users
        get:
            description: Get details for specified user according to input parameters.
            operationId: getUserRequest
            parameters:
                - description: User name.
                  in: path
                  name: name
                  required: true
                  type: string
                  x-go-name: Name
            responses:
                "200":
                    $ref: '#/responses/getUserResponse'
                default:
                    $ref: '#/responses/errResponse'
            summary: Get details for specified user.
            tags:
                - users
        put:
            description: Update user according to input parameters.
            operationId: updateUserRequest
            parameters:
                - description: User information.
                  in: body
                  name: Body
                  schema: {}
                - description: User name.
                  in: path
                  name: name
                  required: true
                  type: string
                  x-go-name: Name
            responses:
                "200":
                    $ref: '#/responses/updateUserResponse'
                default:
                    $ref: '#/responses/errResponse'
            security:
                - api_key: []
            summary: Update user.
            tags:
                - users
    /users/{name}/change_password:
        put:
            description: Change user password.
            operationId: changePasswordRequest
            parameters:
                - description: The name of user.
                  in: path
                  name: name
                  required: true
                  type: string
                  x-go-name: Name
                - in: body
                  name: Body
                  schema: {}
            responses:
                "200":
                    $ref: '#/responses/okResponse'
                default:
                    $ref: '#/responses/errResponse'
            security:
                - api_key: []
            summary: Change user password.
            tags:
                - users
produces:
    - application/json
responses:
    createPolicyResponse:
        description: Policy response.
    createSecretResponse:
        description: Secret response.
    createUserResponse:
        description: User response.
    errResponse:
        description: ErrResponse defines the return messages when an error occurred.
    getPolicyResponse:
        description: Policy response.
    getSecretResponse:
        description: Secret response.
    getUserResponse:
        description: User response.
    listPolicyResponse:
        description: List policies response.
    listSecretResponse:
        description: List secrets response.
    listUserResponse:
        description: List users response.
    okResponse:
        description: Return nil json object.
    updatePolicyResponse:
        description: Policy response.
    updateSecretResponse:
        description: Secret response.
    updateUserResponse:
        description: User response.
schemes:
    - http
    - https
securityDefinitions:
    api_key:
        in: header
        name: Authorization
        type: apiKey
    basic:
        type: basic
swagger: "2.0"
